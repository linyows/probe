name: Browser Automation Examples
description: Examples of using the browser action for web automation

vars:
  search_term: "chromedp golang"
  test_url: "https://httpbin.org/forms/post"

jobs:
- name: Basic Navigation and Screenshot
  id: basic
  steps:
  - name: Navigate to Google
    uses: browser
    with:
      action: navigate
      url: "https://www.google.com"
      headless: true
      timeout: 30s
    test: res.success == "true"
    outputs:
      navigation_time: res.time_ms

  - name: Take Screenshot
    uses: browser
    with:
      action: screenshot
      headless: true
      timeout: 10s
    test: res.success == "true"
    outputs:
      screenshot_size: res.size_bytes

- name: Form Interaction Example
  id: form
  steps:
  - name: Navigate to Form Page
    uses: browser
    with:
      action: navigate
      url: "{{vars.test_url}}"
      headless: true
    test: res.success == "true"

  - name: Wait for Form to Load
    uses: browser
    with:
      action: wait_visible
      selector: "form"
      timeout: 10s
    test: res.success == "true"

  - name: Fill Customer Name
    uses: browser
    with:
      action: type
      selector: 'input[name="custname"]'
      value: "John Doe"
    test: res.success == "true"

  - name: Fill Customer Telephone
    uses: browser
    with:
      action: type
      selector: 'input[name="custtel"]'
      value: "555-1234"
    test: res.success == "true"

  - name: Fill Email
    uses: browser
    with:
      action: type
      selector: 'input[name="custemail"]'
      value: "john.doe@example.com"
    test: res.success == "true"

  - name: Select Pizza Size (Large)
    uses: browser
    with:
      action: click
      selector: 'input[value="large"]'
    test: res.success == "true"

  - name: Fill Delivery Instructions
    uses: browser
    with:
      action: type
      selector: 'textarea[name="delivery"]'
      value: "Please ring the doorbell"
    test: res.success == "true"

  - name: Submit Form
    uses: browser
    with:
      action: click
      selector: 'input[type="submit"]'
    test: res.success == "true"

- name: DOM Content Extraction
  id: extraction
  steps:
  - name: Navigate to Example Page  
    uses: browser
    with:
      action: navigate
      url: "https://example.com"
      headless: true
    test: res.success == "true"

  - name: Get Page Title
    uses: browser
    with:
      action: get_text
      selector: "h1"
    test: res.success == "true"
    outputs:
      page_title: res.text

  - name: Get Meta Description
    uses: browser
    with:
      action: get_attribute
      selector: 'meta[name="description"]'
      attribute: "content"
    test: res.success == "true"
    outputs:
      meta_description: res.value

  - name: Get Page HTML
    uses: browser
    with:
      action: get_html
      selector: "body"
    test: res.success == "true"
    outputs:
      body_html_length: "{{len(res.html)}}"

- name: Search and Wait Example
  id: search
  steps:
  - name: Navigate to Search Engine
    uses: browser
    with:
      action: navigate
      url: "https://duckduckgo.com"
      headless: true
    test: res.success == "true"

  - name: Wait for Search Box
    uses: browser
    with:
      action: wait_visible
      selector: 'input[name="q"]'
      timeout: 10s
    test: res.success == "true"

  - name: Enter Search Term
    uses: browser
    with:
      action: type
      selector: 'input[name="q"]'
      value: "{{vars.search_term}}"
    test: res.success == "true"

  - name: Submit Search
    uses: browser
    with:
      action: submit
      selector: 'input[name="q"]'
    test: res.success == "true"

  - name: Wait for Results
    uses: browser
    with:
      action: wait_visible
      selector: ".results"
      timeout: 15s
    test: res.success == "true"

  - name: Count Search Results
    uses: browser
    with:
      action: get_elements
      selector: ".results .result"
    test: res.success == "true" && res.count != "0"
    outputs:
      result_count: res.count

- name: Interactive Wait Example
  id: interactive
  steps:
  - name: Navigate to Dynamic Content Page
    uses: browser
    with:
      action: navigate
      url: "https://httpbin.org/delay/3"
      headless: true
      timeout: 15s
    test: res.success == "true"

  - name: Wait for Specific Text
    uses: browser
    with:
      action: wait_text
      selector: "body"
      value: "origin"
      timeout: 10s
    test: res.success == "true"
    outputs:
      wait_time: res.time_ms
      actual_text: res.actual_text

- name: Error Handling Example
  id: error_handling
  steps:
  - name: Try Invalid URL
    uses: browser
    with:
      action: navigate
      url: "https://this-domain-should-not-exist-12345.com"
      headless: true
      timeout: 5s
    test: res.success == "false"
    continue_on_error: true
    outputs:
      error_message: res.error

  - name: Try Invalid Selector
    uses: browser
    with:
      action: navigate
      url: "https://example.com"
      headless: true
    test: res.success == "true"

  - name: Get Text from Non-existent Element
    uses: browser
    with:
      action: get_text
      selector: "#non-existent-element"
      timeout: 2s
    test: res.success == "false"
    continue_on_error: true
    outputs:
      selector_error: res.error