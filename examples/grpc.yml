name: gRPC API Examples
description: Examples for using the grpc action with gRPC Server

vars:
  addr: "{{GRPC_ADDR ?? 'localhost:50051'}}"
  service: "{{GRPC_SERVICE ?? 'UserService'}}"

jobs:
- name: "gRPC requests to {{vars.addr}}"
  defaults:
    grpc:
      addr: "{{vars.addr}}"
      service: "{{vars.service}}"
      tls: false
      timeout: 30s
      metadata:
        user-agent: probe-grpc/1.0
  steps:
  - name: Get User
    id: get_user
    uses: grpc
    with:
      method: GetUser
      body:
        user_id: "123"
    test: |
      res.status_code == "OK"
    echo: |
      User ID: {{res.body.user.id}}
    outputs:
      user_id: res.body.user.id
      user_name: res.body.user.name

  - name: Create User
    uses: grpc
    with:
      method: CreateUser
      body:
        user:
          name: Liny Ows
          email: linyows@example.com
          profile:
            age: 30
            location: Fukuoka
        preferences:
          - email_notifications
          - sms_notifications
      metadata:
        authorization: Bearer token123
    test: |
      res.status_code == "OK" &&
      res.body.user.name == "Liny Ows"

  - name: Update User
    uses: grpc
    with:
      method: UpdateUser
      body:
        user_id: "{{outputs.get_user.user_id}}"
        updates:
          email: linyows@example.org
    test: |
      res.status_code == "OK"

  - name: List Users with TLS
    uses: grpc
    with:
      addr: localhost:50052
      method: ListUsers
      tls: true
      insecure: true  # Allow self-signed certificate for testing
      body:
        page_size: 10
        filter:
          active: true
      metadata:
        authorization: Bearer secure-token
    test: |
      res.status_code == "OK"
    echo: |
      Res: {{res.body}}
