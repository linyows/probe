name: SQLite Database Examples
description: Examples for using the db action with SQLite

jobs:
- name: Setup SQLite database file
  id: setup
  steps:
  - name: rm -f testdata/sqlite.db
    uses: shell
    with:
      cmd: rm -f testdata/sqlite.db
    test: res.code == 0

- name: SQLite Examples
  needs: [setup]
  defaults:
    db:
      dsn: file:./testdata/sqlite.db

  steps:
  - name: Create SQLite table
    uses: db
    with:
      query: |
        CREATE TABLE users (
          id INTEGER PRIMARY KEY,
          name TEXT NOT NULL,
          email TEXT UNIQUE
        )
    test: res.code == 0

  - name: Insert test data
    uses: db
    with:
      query: INSERT INTO users (name, email) VALUES (?, ?)
      params:
      - John Doe
      - john@example.com
    test: res.code == 0 && res.rows_affected == 1

  - name: Select all users
    uses: db
    with:
      query: SELECT * FROM users
    test: res.code == 0 && res.rows_affected > 0

  - name: Select user by ID
    uses: db
    with:
      query: SELECT * FROM users WHERE id = ?
      params: [1]
    test: res.code == 0 && res.rows_affected == 1

  - name: Update user
    uses: db
    with:
      query: UPDATE users SET email = ? WHERE id = ?
      params:
      - john.doe@example.com
      - 1
    test: res.code == 0 && res.rows_affected == 1

  - name: Delete user
    uses: db
    with:
      query: DELETE FROM users WHERE id = ?
      params: [1]
    test: res.code == 0 && res.rows_affected == 1

  - name: Drop table
    uses: db
    with:
      query: DROP TABLE users
    test: res.code == 0

- name: Use in-memory
  defaults:
    db:
      dsn: "file::memory:"
  steps:
  - name: Create SQLite table
    uses: db
    with:
      query: |
        CREATE TABLE users (
          id INTEGER PRIMARY KEY,
          name TEXT NOT NULL,
          email TEXT UNIQUE
        )
    test: res.code == 0
