name: MySQL Database Examples
description: Examples for using the db action with MySQL

vars:
  mysql_host: "{{MYSQL_HOST ?? 'localhost'}}"
  mysql_port: "{{MYSQL_PORT ?? 3306}}"
  mysql_user: "{{MYSQL_USER ?? 'root'}}"
  mysql_pass: "{{MYSQL_PASS ?? ''}}"
  mysql_database: probe_test

jobs:
- name: Setup Database
  id: setup

  steps:
  - name: Create Test Database
    uses: db
    with:
      dsn: mysql://{{vars.mysql_user}}:{{vars.mysql_pass}}@{{vars.mysql_host}}:{{vars.mysql_port}}/
      query: CREATE DATABASE IF NOT EXISTS {{vars.mysql_database}}
    test: res.code == 0

- name: MySQL Basic Operations
  id: basic-ops
  needs: [setup]
  defaults:
    db:
      dsn: mysql://{{vars.mysql_user}}:{{vars.mysql_pass}}@{{vars.mysql_host}}:{{vars.mysql_port}}/{{vars.mysql_database}}
  steps:
  - name: Test MySQL Connection
    uses: db
    with:
      query: SELECT 1 as connection_test, NOW() as server_time
    test: res.code == 0
    outputs:
      server_time: res.rows__0__server_time

  - name: Create Test Table
    uses: db
    with:
      query: |
        CREATE TABLE IF NOT EXISTS employees (
          id INT AUTO_INCREMENT PRIMARY KEY,
          name VARCHAR(100) NOT NULL,
          email VARCHAR(150) UNIQUE,
          department VARCHAR(50),
          salary DECIMAL(10,2),
          hire_date DATE,
          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    test: res.code == 0

  - name: Insert Sample Data
    uses: db
    with:
      query: |
        INSERT INTO employees (name, email, department, salary, hire_date) 
        VALUES (?, ?, ?, ?, ?)
      params:
        - Alice Johnson
        - alice.johnson@company.com
        - Engineering
        - 75000.00
        - 2023-01-15
    test: res.code == 0 && res.rows_affected == 1
    outputs:
      employee_id: res.rows_affected

  - name: Insert Multiple Employees
    uses: db
    with:
      query: |
        INSERT INTO employees (name, email, department, salary, hire_date) 
        VALUES 
        ('Bob Smith', 'bob.smith@company.com', 'Marketing', 60000.00, '2023-02-01'),
        ('Carol Davis', 'carol.davis@company.com', 'Engineering', 80000.00, '2023-01-20'),
        ('David Wilson', 'david.wilson@company.com', 'Sales', 55000.00, '2023-03-10')
    test: res.code == 0 && res.rows_affected == 3

  - name: Query All Employees
    uses: db
    with:
      query: SELECT id, name, email, department, salary FROM employees ORDER BY hire_date
    test: res.code == 0 && res.rows_affected >= 4

  - name: Query with WHERE Clause
    uses: db
    with:
      query: SELECT * FROM employees WHERE department = ? AND salary > ?
      params:
        - Engineering
        - 70000
    test: res.code == 0

  - name: Update Employee Salary
    uses: db
    with:
      query: UPDATE employees SET salary = salary * 1.1 WHERE department = ?
      params:
        - Engineering
    test: res.code == 0 && res.rows_affected >= 1

  - name: Count Employees by Department
    uses: db
    with:
      query: |
        SELECT department, COUNT(*) as employee_count, AVG(salary) as avg_salary
        FROM employees 
        GROUP BY department 
        ORDER BY employee_count DESC
    test: res.code == 0

  - name: Show Table Info
    uses: db
    with:
      query: DESCRIBE employees
    test: res.code == 0

  - name: Create Stored Procedure
    uses: db
    with:
      query: |
        CREATE PROCEDURE IF NOT EXISTS GetEmployeesByDepartment(IN dept_name VARCHAR(50))
        BEGIN
          SELECT name, email, salary 
          FROM employees 
          WHERE department = dept_name 
          ORDER BY salary DESC;
        END
    test: res.code == 0

  - name: Call Stored Procedure
    uses: db
    with:
      query: CALL GetEmployeesByDepartment(?)
      params:
        - Engineering
    test: res.code == 0

  - name: Cleanup Procedure
    uses: db
    with:
      query: DROP PROCEDURE IF EXISTS GetEmployeesByDepartment
    test: res.code == 0

  - name: Drop Test Table
    uses: db
    with:
      query: DROP TABLE IF EXISTS employees
    test: res.code == 0

- name: MySQL Advanced Features
  id: advanced
  needs: [basic-ops]
  steps:
  - name: Show MySQL Version and Status
    uses: db
    with:
      dsn: mysql://{{vars.mysql_user}}:{{vars.mysql_pass}}@{{vars.mysql_host}}:{{vars.mysql_port}}/{{vars.mysql_database}}
      query: SELECT VERSION() as mysql_version, CONNECTION_ID() as connection_id
    test: res.code == 0

- name: Cleanup
  id: cleanup
  needs: [advanced]
  steps:
  - name: Drop Test Database
    uses: db
    with:
      dsn: mysql://{{vars.mysql_user}}:{{vars.mysql_pass}}@{{vars.mysql_host}}:{{vars.mysql_port}}/
      query: DROP DATABASE IF EXISTS {{vars.mysql_database}}
    test: res.code == 0
